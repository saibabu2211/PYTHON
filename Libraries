üß† What Is NumPy?
NumPy (Numerical Python) is the foundational library for numerical computing in Python. It provides:

Multidimensional arrays (ndarray) that are faster and more memory-efficient than Python lists.

Mathematical functions to operate on arrays without writing loops.

Linear algebra, statistics, and random number generation tools.

Seamless integration with other libraries like Pandas, Matplotlib, and SciPy.

## üß± 1. Array Creation

| Function | Description |
|---------|-------------|
| `np.array()` | Create array from list or tuple. |
| `np.zeros()` | Create array filled with zeros. |
| `np.ones()` | Create array filled with ones. |
| `np.full()` | Create array with a constant value. |
| `np.eye()` | Identity matrix. |
| `np.arange()` | Range with step size. |
| `np.linspace()` | Evenly spaced values over interval. |
| `np.random.rand()` | Random values in [0,1). |
| `np.random.randint()` | Random integers. |

---

## üîç 2. Inspecting Arrays

| Function | Description |
|---------|-------------|
| `ndarray.shape` | Dimensions of array. |
| `ndarray.size` | Total number of elements. |
| `ndarray.dtype` | Data type of elements. |
| `ndarray.ndim` | Number of dimensions. |
| `ndarray.itemsize` | Size of one element in bytes. |

---

## ‚úÇÔ∏è 3. Indexing, Slicing, Subsetting

| Function | Description |
|---------|-------------|
| `arr[i]` | Indexing. |
| `arr[1:4]` | Slicing. |
| `arr[:, 1]` | Column access. |
| `arr[::2]` | Step slicing. |
| `arr[arr > 5]` | Boolean indexing. |

---

## üîÑ 4. Array Manipulation

| Function | Description |
|---------|-------------|
| `np.reshape()` | Change shape. |
| `np.ravel()` / `flatten()` | Flatten array. |
| `np.transpose()` | Swap axes. |
| `np.resize()` | Resize array. |
| `np.append()` | Add elements. |
| `np.insert()` | Insert elements. |
| `np.delete()` | Remove elements. |
| `np.concatenate()` | Join arrays. |
| `np.split()` / `np.hsplit()` | Split arrays. |

---

## ‚ûï 5. Arithmetic Operations

| Function | Description |
|---------|-------------|
| `np.add()` / `+` | Element-wise addition. |
| `np.subtract()` / `-` | Subtraction. |
| `np.multiply()` / `*` | Multiplication. |
| `np.divide()` / `/` | Division. |
| `np.power()` | Exponentiation. |
| `np.mod()` | Modulo. |

---

## üìä 6. Statistical Functions

| Function | Description |
|---------|-------------|
| `np.mean()` | Mean. |
| `np.median()` | Median. |
| `np.std()` | Standard deviation. |
| `np.var()` | Variance. |
| `np.sum()` | Sum. |
| `np.prod()` | Product. |
| `np.min()` / `np.max()` | Min/Max. |
| `np.argmin()` / `np.argmax()` | Index of Min/Max. |
| `np.percentile()` | Percentile. |

---

## üß† 7. Advanced Math & Linear Algebra

| Function | Description |
|---------|-------------|
| `np.dot()` | Dot product. |
| `np.vdot()` | Flattened dot product. |
| `np.inner()` | Inner product. |
| `np.outer()` | Outer product. |
| `np.cross()` | Cross product. |
| `np.linalg.inv()` | Matrix inverse. |
| `np.linalg.det()` | Determinant. |
| `np.linalg.eig()` | Eigenvalues/vectors. |
| `np.trace()` | Diagonal sum. |
| `np.corrcoef()` | Correlation matrix. |
| `np.cov()` | Covariance matrix. |

---

## üß™ 8. Utility & Transformation

| Function | Description |
|---------|-------------|
| `np.sort()` / `np.argsort()` | Sort and indices. |
| `np.clip()` | Limit values. |
| `np.round()` / `floor()` / `ceil()` | Rounding. |
| `np.diff()` | Discrete difference. |
| `np.unique()` | Unique values. |
| `np.vectorize()` | Vectorize Python function. |
| `np.where()` | Conditional selection. |
| `np.all()` / `np.any()` | Logical checks. |
| `np.nonzero()` | Indices of non-zero. |

---

## üìÅ 9. File I/O

| Function | Description |
|---------|-------------|
| `np.loadtxt()` | Load from text file. |
| `np.genfromtxt()` | Load with missing values. |
| `np.savetxt()` | Save to text file. |
| `np.save()` / `np.load()` | Save/load binary `.npy`. |

---

## üß† TL;DR: What You Should Know

- **Start with `np.array()`**, then use `reshape`, `slice`, and `index` to manipulate.
- **Use `np.mean`, `np.std`, `np.corrcoef`** for analytics.
- **Use `np.dot`, `np.linalg.inv`, `np.cross`** for linear algebra.
- **Use `np.vectorize`, `np.where`, `np.clip`** for advanced control.

For a real-world use case, I can build a modular Python script that uses creation, slicing, aggregation, and correlation ‚Äî perfect for your manager-ready submission. Want me to sketch that out next?

## ‚úÖ Logical & Comparison Functions

| Function | Description |
|---------|-------------|
| `all` | Returns `True` if all elements evaluate to `True`. |
| `any` | Returns `True` if any element evaluates to `True`. |
| `where` | Returns indices where a condition is `True`, or selects elements based on condition. |

---

## üßÆ Statistical & Aggregation Functions

| Function | Description |
|---------|-------------|
| `mean` | Computes the arithmetic mean. |
| `median` | Computes the median. |
| `average` | Computes weighted average if weights are given. |
| `std` | Standard deviation. |
| `var` | Variance. |
| `sum` | Sum of array elements. |
| `prod` | Product of array elements. |
| `cumprod` | Cumulative product. |
| `cumsum` | Cumulative sum. |
| `bincount` | Counts occurrences of non-negative integers. |

---

## üìä Sorting & Indexing

| Function | Description |
|---------|-------------|
| `argmax` | Index of maximum value. |
| `argmin` | Index of minimum value. |
| `argsort` | Indices that would sort the array. |
| `lexsort` | Indirect stable sort using multiple keys. |
| `sort` | Sorts the array. |
| `nonzero` | Indices of non-zero elements. |

---

## üß† Array Manipulation & Transformation

| Function | Description |
|---------|-------------|
| `apply_along_axis` | Applies a function to 1D slices along a specified axis. |
| `clip` | Limits values to a specified range. |
| `round` | Rounds elements to specified decimals. |
| `floor` | Rounds down to nearest integer. |
| `ceil` | Rounds up to nearest integer. |
| `transpose` | Permutes axes of an array. |
| `trace` | Sum along diagonals. |
| `vectorize` | Turns a Python function into a NumPy-aware function. |

---

## ‚ûó Linear Algebra & Math

| Function | Description |
|---------|-------------|
| `dot` | Dot product of two arrays. |
| `vdot` | Dot product of flattened arrays. |
| `inner` | Inner product. |
| `outer` | Outer product. |
| `cross` | Cross product of vectors. |
| `cov` | Covariance matrix. |
| `corrcoef` | Correlation coefficient matrix. |

---

## üî¨ Bitwise & Complex Operations

| Function | Description |
|---------|-------------|
| `invert` | Bitwise NOT. |
| `conj` | Complex conjugate. |
| `re` | Real part of complex numbers. |

---

## üìà Differences & Derivatives

| Function | Description |
|---------|-------------|
| `diff` | Discrete difference along axis. |

---

## üî¢ Min/Max Utilities

| Function | Description |
|---------|-------------|
| `max` | Maximum value. |
| `maximum` | Element-wise maximum. |
| `min` | Minimum value. |
| `minimum` | Element-wise minimum. |

